name: Python CI with MongoDB

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # Brak env: MONGO_URI, bo jest zakodowany w mongodb.py

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest-cov pytest-benchmark # Upewnij się, że pytest-benchmark jest zainstalowany

      - name: List files for debugging (expanded)
        run: |
          echo "--- Listing files in root directory ---"
          ls -F
          echo ""
          echo "--- Content of mongodb.py ---"
          cat mongodb.py || echo "mongodb.py not found."
          echo ""

      - name: Show pytest version and plugins
        run: pytest --version

      - name: Debug pytest discovery (verbose)
        run: |
          echo "--- Verbose Pytest discovery for mongodb.py ---"
          pytest mongodb.py --collect-only -v
          echo ""
          echo "--- Verbose Pytest discovery for current directory (fallback) ---"
          pytest --collect-only -v
          echo ""

      - name: Lint with flake8
        run: flake8 . || true

      - name: Check formatting with black
        run: black --check .

      - name: Run full tests with coverage and print summary
        run: |
          pytest mongodb.py --cov=. --cov-report=term # Uruchamia testy bezpośrednio z mongodb.py

      - name: Run tests with coverage (HTML report)
        run: |
          pytest mongodb.py --cov=. --cov-report=html # Generuje raport HTML dla mongodb.py

      - name: List the contents of htmlcov
        run: ls -R htmlcov

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: downloaded-coverage-report

      - name: Display structure of downloaded files
        run: ls -R downloaded-coverage-report
      - name: Display structure of downloaded files
        run: ls -R downloaded-coverage-report
